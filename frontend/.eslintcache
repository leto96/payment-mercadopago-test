[{"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/reportWebVitals.js":"1","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/SuccessShow/SuccessShow.js":"2","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Form/Form.js":"3"},{"size":362,"mtime":1608591529980,"results":"4","hashOfConfig":"5"},{"size":506,"mtime":1609893077420,"results":"6","hashOfConfig":"5"},{"size":11100,"mtime":1609893077284,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"day793",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/reportWebVitals.js",[],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/SuccessShow/SuccessShow.js",["14"],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Form/Form.js",["15","16"],{"ruleId":"17","severity":1,"message":"18","line":10,"column":7,"nodeType":"19","endLine":10,"endColumn":72},{"ruleId":"20","severity":1,"message":"21","line":339,"column":6,"nodeType":"22","endLine":339,"endColumn":8,"suggestions":"23"},{"ruleId":"20","severity":1,"message":"24","line":362,"column":6,"nodeType":"22","endLine":362,"endColumn":21,"suggestions":"25"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setReadyDocTypes'. Either include it or remove the dependency array.","ArrayExpression",["26"],"React Hook useEffect has missing dependencies: 'formData', 'formatDataToPost', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["27"],{"desc":"28","fix":"29"},{"desc":"30","fix":"31"},"Update the dependencies array to be: [setReadyDocTypes]",{"range":"32","text":"33"},"Update the dependencies array to be: [formData, formSubmitted, formatDataToPost, props]",{"range":"34","text":"35"},[9547,9549],"[setReadyDocTypes]",[10042,10057],"[formData, formSubmitted, formatDataToPost, props]"]