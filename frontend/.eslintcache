[{"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/reportWebVitals.js":"1","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/SuccessShow/SuccessShow.js":"2","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Form/Form.js":"3","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Button/Button.js":"4","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/App.js":"5","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Input/Input.js":"6","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/index.js":"7","/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Spinner/Spinner.js":"8"},{"size":362,"mtime":1608591529980,"results":"9","hashOfConfig":"10"},{"size":506,"mtime":1609893077420,"results":"11","hashOfConfig":"10"},{"size":11880,"mtime":1610069818623,"results":"12","hashOfConfig":"10"},{"size":292,"mtime":1609977296031,"results":"13","hashOfConfig":"10"},{"size":1076,"mtime":1609893077260,"results":"14","hashOfConfig":"10"},{"size":1573,"mtime":1609893077284,"results":"15","hashOfConfig":"10"},{"size":500,"mtime":1608591529980,"results":"16","hashOfConfig":"10"},{"size":130,"mtime":1609091131059,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"day793",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/reportWebVitals.js",[],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/SuccessShow/SuccessShow.js",["39"],"import React from 'react';\nimport image from './O9IY2T0.jpg'\nimport styles from './SuccessShow.module.css';\n\nconst SuccessShow = (props) => {\n  return (\n    <>\n      <div className={styles.thanksMessage}>Thank you!</div>\n      <p className={styles.buildingMessage}>We are still building...</p>\n      <img className={styles.image} src={image} alt=\"Building Image\" />\n      <a className={styles.autorlink} href=\"https://br.freepik.com/vectors/fundo\">dooder logo</a>\n    </>\n  )\n}\n\nexport default SuccessShow;",["40","41"],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Form/Form.js",["42","43"],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Button/Button.js",[],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/App.js",[],["44","45"],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Input/Input.js",["46"],"import React, { useState } from 'react';\nimport styles from './Input.module.css'\n\nconst Input = (props) => {\n  const isSensible = props.isSensible || false;\n\n  const extraAttr = {};\n  if(!isSensible){\n    extraAttr['name'] = props.name;\n    extraAttr['hidden'] = props.hidden;\n  }\n\n  const onChangeChildHandler = (e) => {\n    props.onChange(props.index, e);\n  }\n\n  let generatedInvalidMessage = null;\n  if(props.invalidMessage && props.invalidMessage !== ''){\n    generatedInvalidMessage = <p className={styles.validationMessage}>{props.invalidMessage}</p>\n  }\n\n  let input;\n    \n  if(props.type !== 'select'){\n    input = (<input\n      className={styles.input}\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      data-checkout={props.dataCheckout}\n      placeholder={props.placeholder}\n      {...extraAttr}\n      onChange={onChangeChildHandler}\n    />)\n  }\n  \n  if(props.type === 'select'){\n    input = (<select\n      className={styles.input}\n      id={props.id}\n      value={props.value}\n      data-checkout={props.dataCheckout}\n      placeholder={props.placeholder}\n      {...extraAttr}\n      onChange={onChangeChildHandler}\n    >\n      {props.options && props.options.map(option => (\n        <option key={option.value} value={option.value}>{option.text}</option>\n      ))}\n    </select>)\n  }\n  \n  return (\n    <div className={props.hidden ? styles.hiddenGroup : styles.group}>\n      <label className={styles.label} htmlFor={props.id}>{props.labelName}</label>\n      {input}\n      {generatedInvalidMessage}\n    </div>\n  )\n}\n\nexport default Input;",["47","48"],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/index.js",[],"/home/leto/Programming/Node/Projects/paymenttest/frontend/src/components/Spinner/Spinner.js",[],{"ruleId":"49","severity":1,"message":"50","line":10,"column":7,"nodeType":"51","endLine":10,"endColumn":72},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":364,"column":6,"nodeType":"58","endLine":364,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":388,"column":6,"nodeType":"58","endLine":388,"endColumn":21,"suggestions":"61"},{"ruleId":"52","replacedBy":"62"},{"ruleId":"54","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"52","replacedBy":"68"},{"ruleId":"54","replacedBy":"69"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setReadyDocTypes'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'formData', 'formatDataToPost', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["73"],["70"],["71"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["70"],["71"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [setReadyDocTypes]",{"range":"78","text":"79"},"Update the dependencies array to be: [formData, formSubmitted, formatDataToPost, props]",{"range":"80","text":"81"},[10234,10236],"[setReadyDocTypes]",[10762,10777],"[formData, formSubmitted, formatDataToPost, props]"]